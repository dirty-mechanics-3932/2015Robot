// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3932;
    
import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Relay;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANTalon driveSystemLeftFront;
    public static CANTalon driveSystemRightBack;
    public static CANTalon driveSystemLeftBack;
    public static CANTalon driveSystemRightFront;
    public static RobotDrive driveSystemMecanumDrive;
    public static DoubleSolenoid driveSystemLeftTransmissionDblSolenoid;
    public static DoubleSolenoid driveSystemRightTransmissionDblSolenoid;
    public static AnalogInput driveSystemLeftForwardIR;
    public static AnalogInput driveSystemRightForwardIR;
    public static AnalogInput driveSystemLeftDownIR;
    public static AnalogInput driveSystemRightDownIR;
    public static DigitalInput elevatorbottomLimitSwitch;
    public static CANTalon elevatorElevatorCANTalon;
    public static CANTalon gatesLeftGateCANTalon;
    public static CANTalon gatesRightGateCANTalon;
    public static Relay tabsLeftTabSpike;
    public static Relay tabsRightTabSpike;
    public static CANTalon armsArmWidthCANTalon;
    public static AnalogPotentiometer armsArmEncoder;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveSystemLeftFront = new CANTalon(8);
        
        
        driveSystemRightBack = new CANTalon(3);
        
        
        driveSystemLeftBack = new CANTalon(4);
        
        
        driveSystemRightFront = new CANTalon(5);
        
        
        driveSystemMecanumDrive = new RobotDrive(driveSystemLeftFront, driveSystemLeftBack,
              driveSystemRightFront, driveSystemRightBack);
        
        driveSystemMecanumDrive.setSafetyEnabled(true);
        driveSystemMecanumDrive.setExpiration(0.1);
        driveSystemMecanumDrive.setSensitivity(0.5);
        driveSystemMecanumDrive.setMaxOutput(1.0);
        driveSystemMecanumDrive.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
        driveSystemMecanumDrive.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        driveSystemLeftTransmissionDblSolenoid = new DoubleSolenoid(0, 0, 1);      
        LiveWindow.addActuator("DriveSystem", "LeftTransmissionDblSolenoid", driveSystemLeftTransmissionDblSolenoid);
        
        driveSystemRightTransmissionDblSolenoid = new DoubleSolenoid(0, 2, 3);      
        LiveWindow.addActuator("DriveSystem", "RightTransmissionDblSolenoid", driveSystemRightTransmissionDblSolenoid);
        
        driveSystemLeftForwardIR = new AnalogInput(0);
        LiveWindow.addSensor("DriveSystem", "LeftForwardIR", driveSystemLeftForwardIR);
        
        driveSystemRightForwardIR = new AnalogInput(1);
        LiveWindow.addSensor("DriveSystem", "RightForwardIR", driveSystemRightForwardIR);
        
        driveSystemLeftDownIR = new AnalogInput(2);
        LiveWindow.addSensor("DriveSystem", "LeftDownIR", driveSystemLeftDownIR);
        
        driveSystemRightDownIR = new AnalogInput(3);
        LiveWindow.addSensor("DriveSystem", "RightDownIR", driveSystemRightDownIR);
        
        elevatorbottomLimitSwitch = new DigitalInput(0);
        LiveWindow.addSensor("Elevator", "bottomLimitSwitch", elevatorbottomLimitSwitch);
        
        elevatorElevatorCANTalon = new CANTalon(6);
        
        
        gatesLeftGateCANTalon = new CANTalon(2);
        
        
        gatesRightGateCANTalon = new CANTalon(9);
        
        
        tabsLeftTabSpike = new Relay(0);
        LiveWindow.addActuator("Tabs", "LeftTabSpike", tabsLeftTabSpike);
        
        tabsRightTabSpike = new Relay(1);
        LiveWindow.addActuator("Tabs", "RightTabSpike", tabsRightTabSpike);
        
        armsArmWidthCANTalon = new CANTalon(10);
        
        
        armsArmEncoder = new AnalogPotentiometer(4, 4.0, 0.5);
        LiveWindow.addSensor("Arms", "ArmEncoder", armsArmEncoder);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
    
    
    
}
