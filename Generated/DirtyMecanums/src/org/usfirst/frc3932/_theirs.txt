
public class CK_17 extends IterativeRobot {

    SendableChooser autoChooser;
    Command autonomousCommand, arcadeDriveCommand, initialShiftCommand,
            testLauncherCommand, rollerControlCommand, initialRetractCommand,
            fireAutomatedCommand, trussAutomatedCommand, lightPassAutomated,
            launcherOverride;
    

    public void robotInit() {
        autoChooser = new SendableChooser();
        autoChooser.addObject("Simple Drive", new SimpleDrive());
        autoChooser.addObject("Simple Drive Then Shot", new SimpleDriveThenShot());
        autoChooser.addDefault("Drive Then Hot Shot", new DriveThenHotShot());
        autoChooser.addObject("Do Nothing", new DoNothing());
        SmartDashboard.putData("Choose an autonomous mode", autoChooser);
        
    }

    public void autonomousInit() {
        // Reset hot goal counts
        autonomousCommand = (Command)autoChooser.getSelected();
        autonomousCommand.start(); // schedule the autonomous command
    }

   
    
    public void teleopInit() {
        // Try catch just in case auton isn't set yet
        try {
            autonomousCommand.cancel(); // Make sure auton is finished
        } catch (Exception ex){
            ex.printStackTrace();
        }
    }

    /**
     * This function is called periodically during test mode
     */
    public void testPeriodic() {
        LiveWindow.run();
    }
}
